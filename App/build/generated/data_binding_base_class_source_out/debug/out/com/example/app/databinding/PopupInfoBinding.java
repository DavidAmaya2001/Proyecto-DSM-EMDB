// Generated by view binder compiler. Do not edit!
package com.example.app.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.app.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class PopupInfoBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final ImageView imageInfo;

  @NonNull
  public final TextView informationContact;

  @NonNull
  public final TextView subinformationContact;

  private PopupInfoBinding(@NonNull RelativeLayout rootView, @NonNull ImageView imageInfo,
      @NonNull TextView informationContact, @NonNull TextView subinformationContact) {
    this.rootView = rootView;
    this.imageInfo = imageInfo;
    this.informationContact = informationContact;
    this.subinformationContact = subinformationContact;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static PopupInfoBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static PopupInfoBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.popup_info, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static PopupInfoBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.imageInfo;
      ImageView imageInfo = ViewBindings.findChildViewById(rootView, id);
      if (imageInfo == null) {
        break missingId;
      }

      id = R.id.informationContact;
      TextView informationContact = ViewBindings.findChildViewById(rootView, id);
      if (informationContact == null) {
        break missingId;
      }

      id = R.id.subinformationContact;
      TextView subinformationContact = ViewBindings.findChildViewById(rootView, id);
      if (subinformationContact == null) {
        break missingId;
      }

      return new PopupInfoBinding((RelativeLayout) rootView, imageInfo, informationContact,
          subinformationContact);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
